version: "3.9"

services:
  backend:
    build: ./backend
    healthcheck:
      test: "curl --fail http://localhost:4000/ || exit 1"
      retries: 10
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build: ./frontend
    env_file: .env.test
    healthcheck:
      test: "curl --fail --request GET --header 'content-type: application/json' --url 'http://localhost:3000/api/healthcheck' || exit 1"
      retries: 10
    depends_on:
      backend:
        condition: service_healthy

  e2e:
    build: ./e2e
    volumes:
      - ./e2e/playwright-report:/app/playwright-report
      - ./e2e/test-results:/app/test-results
    depends_on:
      frontend:
        condition: service_healthy

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD:-defaultpassword}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ulas -U ulas || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    #volumes:
    #- pgdata:/var/lib/postgresql/data
